{
  "author": {
    "name": "Rob Evans",
    "url": "Irrelon Software Limited"
  },
  "name": "node-jsrender",
  "description": "An actively maintained wrapper for the jsrender project by @borismoore. Uses latest source from the jsrender project and extends functionality for easy use in Node.js.",
  "version": "1.0.3",
  "main": "./index",
  "engines": {
    "node": "*"
  },
  "readme": "# Node-JSRender\r\nAn actively maintained wrapper for the jsrender project by @borismoore (https://github.com/BorisMoore/jsrender). Uses latest source from the jsrender project and extends functionality for easy use in Node.js.\r\n\r\n## Install\r\n\tnpm install node-jsrender\r\n\r\n## Usage\r\n\r\n### Loading a Template From a String\r\n```javascript\r\n// Require the node module\r\nvar jsrender = require('node-jsrender');\r\n\r\n// Load a template from string\r\njsrender.loadString('#myTemplate', '{{:data}}');\r\n\r\n// Render the template with data\r\njsrender.render['#myTemplate']({data: 'hello'});\r\n\r\n// Output is: \"hello\"\r\n```\r\n\r\n### Loading a Template From a File (Synchronously)\r\n```javascript\r\n// Require the node module\r\nvar jsrender = require('node-jsrender');\r\n\r\n// Load a template from ./templates/myTemplate.html\r\n//     Contents of ./templates/myTemplate.html is: \"{{:data}}\"\r\njsrender.loadFileSync('#myTemplate', './templates/myTemplate.html');\r\n\r\n// Render the template with data\r\njsrender.render['#myTemplate']({data: 'hello'});\r\n\r\n// Output is: \"hello\"\r\n```\r\n\r\n### Loading a Template From a File (Asynchronously)\r\n```javascript\r\n// Require the node module\r\nvar jsrender = require('node-jsrender');\r\n\r\n// Load a template from ./templates/myTemplate.html\r\n//     Contents of ./templates/myTemplate.html is: \"{{:data}}\"\r\njsrender.loadFile('#myTemplate', './templates/myTemplate.html', function (err, template) {\r\n\tif (!err) {\r\n\t\t// Template was loaded\r\n\t\t// Render the template with data\r\n\t\tjsrender.render['#myTemplate']({data: 'hello'});\r\n\t\t\r\n\t\t// Output is: \"hello\"\r\n\t} else {\r\n\t\tthrow(err);\r\n\t}\r\n});\r\n```\r\n\r\n### Nested Templates\r\n\r\nIn jsrender, you can have templates that reference other templates, nested templates. But to work, you must register the nested templates before rending the parent template.\r\n\r\n```javascript\r\n// Require the node module\r\nvar jsrender = require('node-jsrender');\r\n\r\n// Load parent template from string\r\n//     {{for items tmpl=\"#listItem\" //}} indicates a nested template\r\njsrender.loadString('#list', '<ul>Grocery List</ul>{{for items tmpl=\"#listItem\" /}}</ul>');\r\n\r\n// Load child template from string\r\n//      Nested templates must be registered with a name matching the parent template before rendering the parent template\r\njsrender.loadString('#listItem', '<li>{{:name}}</li>');\r\n\r\n// Render the parent template with data\r\njsrender.render['#list']({items: [{name:'Carrots'}, {name: \"Banana\"}]});\r\n\r\n// Output is: \"<ul>Grocery List</ul><li>Carrots</li><li>Banana</li></ul>\"\r\n```\r\n",
  "readmeFilename": "readme.md",
  "_id": "node-jsrender@1.0.3",
  "_from": "node-jsrender@1.0.3"
}
